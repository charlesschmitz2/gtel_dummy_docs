"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[815],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var o=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=o.createContext({}),p=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),k=l,d=c["".concat(i,".").concat(k)]||c[k]||m[k]||a;return n?o.createElement(d,r(r({ref:t},u),{},{components:n})):o.createElement(d,r({ref:t},u))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var p=2;p<a;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5088:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=n(7462),l=(n(7294),n(3905));const a={id:"deployment",title:"How to Deploy",sidebar_label:"Deploy / Install"},r="DashOps Deployment!",s={unversionedId:"deployment",id:"deployment",title:"How to Deploy",description:"If Just installing for Deployment",source:"@site/docs/(4)ServerSetUp.md",sourceDirName:".",slug:"/deployment",permalink:"/gtel_dummy_docs/docs/deployment",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/(4)ServerSetUp.md",tags:[],version:"current",frontMatter:{id:"deployment",title:"How to Deploy",sidebar_label:"Deploy / Install"},sidebar:"tutorialSidebar",previous:{title:"Setup Development Environment",permalink:"/gtel_dummy_docs/docs/development"},next:{title:"File Structure",permalink:"/gtel_dummy_docs/docs/files"}},i={},p=[],u={toc:p};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"dashops-deployment"},"DashOps Deployment!"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"If Just installing for Deployment")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Make sure to follow the NodeJS, Postgres and Docker Steps below")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Install the Docker image of the latest version of DashOps and run it!"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Server Deployment Instructions")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"These steps are are based around deploying to a server instance running in the Marist ECRL.\nIn this case the OS DashOps is being deployed to is a server running Ubuntu server 20.04LTS,\nthis deployment will be using NodeJS, npm, express, Postgres, and Docker.")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Install NodeJS")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo apt install node"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Install npm")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo apt install npm"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Install Postgres")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Run this command to install postgres")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo apt install postgres"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"If this is your first time installing postgres on a ubuntu follow Ubuntu ",(0,l.kt)("a",{parentName:"li",href:"https://ubuntu.com/server/docs/databases-postgresql"},"Here")," and Postgres' ",(0,l.kt)("a",{parentName:"li",href:"https://www.postgresql.org/download/linux/ubuntu/"},"Here")," documentation on installing postgres on the server")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"tip if doing this install remotely over SSH and need to install a database backup use scp to transfer your backup file")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Follow these commands to setup a new database from the backup")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Docker Install")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Setup Docker repos and install docker engine and CLI ",(0,l.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/ubuntu/"},"Click Here"))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Once that is complete, for other useful information about docker usage follow the post-install instructions for docker",(0,l.kt)("a",{parentName:"em",href:"https://docs.docker.com/engine/install/linux-postinstall/"},"Click Here"))),(0,l.kt)("h1",{id:"installing-and-running-dashopsdevelopment-purposes"},"Installing and Running DashOps(Development Purposes)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Git Setup")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"If git is not already installed run the following command:")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo apt install git"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Setup git credentials using your prefered method")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code Base")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Download or clone a copy of DashOps From ",(0,l.kt)("inlineCode",{parentName:"p"},"https://github.com/SeamusDoyle/DashOps.git "))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Install the DashOps folder into the main directory of the user account where postgres is installed"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Running with docker")),(0,l.kt)("p",null,"Running DashOps in DOcker on the ECRL requires a few edits to be made in the postgres configuration."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Change the ",(0,l.kt)("em",{parentName:"li"},"pg_hba.conf")," to accept connections from 172.17.0.0/16")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo vim /etc/postgresql/*versionsOfPostgres*/main/pg_hba.conf"))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"host      all     all        172.17.0.0/16           md5"))),(0,l.kt)("p",null,"The above allows for connections from the Docker ip address range"),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"In the postgresql.conf make sure to allow connections from all hosts")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"listen_addresses = '*'"))),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Assuming you did not install an existing image, it is time to build a docker image and run it")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"To build an image navigate to the project folder where the Dockerfile is visible"))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"/DashOps/backend/"))),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},"Run the following command to build the container")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"docker build -t dashops:*versionsNumber* ."))),(0,l.kt)("ol",{start:6},(0,l.kt)("li",{parentName:"ol"},"Once the image builds run it with")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"docker run --add-host=host.docker.internal:host-gateway -p 5000:3000 dashops:*versionNum*"))),(0,l.kt)("p",null,"*Depending on the permissions setup on your local matching the above commands may need ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo")," prefix"))}m.isMDXComponent=!0}}]);